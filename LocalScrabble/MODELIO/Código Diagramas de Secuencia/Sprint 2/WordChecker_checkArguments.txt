@startuml

participant Game as g

participant WordChecker as ch

activate g

g -> ch: o() checkArguments(word, posX ,posY, direction)

activate ch

ch -> ch: o() checkwordExist(word)

activate ch

deactivate ch

ch -> ch: o() checkWordNotUsed(word)

activate ch

deactivate ch

ch -> ch: o() checkDirection(direction)

activate ch

deactivate ch

ch -> ch: o() checkWordLength(word)

activate ch

deactivate ch

ch-> ch: o() checkPosInRange(posX, posY)

activate ch

deactivate ch

ch -> ch: o() checkWordUnion(word, posX, posY, direction)

activate ch

deactivate ch

ch -> ch: c() getLettersNeeded(word)

activate ch

ch --> ch: lettersNeeded

deactivate ch

ch -> ch: o() checkWordInPosAndDirection(word, posX, posY, direction, lettersNeeded)

activate ch

deactivate ch

ch -> ch: o() checkEnoughLetters(lettersNeeded)

activate ch

deactivate ch

ch -> g: o() getWordsInBoard activate g

g --> ch: wordsInBoard

deactivate g

alt !wordsInBoard

ch -> ch: o() checkWordInCenter(word, posX, posY, direction)

activate ch

deactivate ch

else

ch -> ch: o() checkWordNextToOther(word, posX, posY, direction)

activate ch

deactivate ch

end

ch -> ch: o() checkNewFormedWords(word, posX, posY, direction)

activate ch

deactivate ch

ch -> g: o() writeAWord(word, posX, posY, direction)

activate g

deactivate g

ch -> g: o() update

activate g

deactivate g

deactivate ch

deactivate g

@enduml